#!/bin/bash

# ===============================================
# Raspberry Pi Toolchains(raspberry-pi-cross-compilers): This project
# provides latest automated GCC Cross Compiler & Native (ARM & ARM64)
# build-scripts and precompiled standalone toolchains for Raspberry Pi.

# Copyright (C) 2020 Abhishek Thakur(@abhiTronix) <abhi.una12@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# ===============================================

# This script auto-deploys Toolchain specific README.md to Sourceforge secured server

helpfunction() {
    #helper function that prints custom usage help menu
    echo ""
    echo ""
    figlet -t -k -f /usr/share/figlet/standard.flf "Raspberry Pi Toolchains Docs Deployer"
    echo ""
    figlet -t -k -f /usr/share/figlet/term.flf "Copyright (c) 2020 abhiTronix"
    echo ""
    echo ""
    echo "Usage: $0 -t [Toolchain Type] -f [Folder type] -o [Target Pi OS type] -r [Raspberry Pi type] "
    echo -e "\t-t Toolchain Type?: (cross|native|cross_64|native_64|CLI)"
    echo -e "\t-f Upload Folder type?: (root|main|base|experimental)"
    echo -e "\t-o Raspberry Pi OS type?: (buster|bullseye|bookworm)"
    echo -e "\t-r What's yours Target Raspberry Pi type?: (0-1|2-3|3+|x86|x86_64)"
    echo ""
    echo ""
    exit 1 # Exit script after printing help
}

#input arguments handler
while getopts "t:f:o:r:" opt; do
    case "$opt" in
    t) TOOLCHAIN="$OPTARG" ;;
    f) FOLDER_TYPE="$OPTARG" ;;
    o) RPIOS_TYPE="$OPTARG" ;;
    r) RPI_TYPE="$OPTARG" ;;
    ?) helpfunction ;; #prints help function for invalid parameter
    esac
done

#validates parameters and print usage helper function in case parameters are missing
if [ -z "$TOOLCHAIN" ]; then
    TOOLCHAIN="others"
fi

if [ -z "$FOLDER_TYPE" ]; then
    echo "Error: Required parameters are missing!"
    helpfunction
fi

if ! [[ "$FOLDER_TYPE" =~ ^("root"|"main"|"base"|"experimental")$ ]]; then
    echo "Error: Wrong folder!"
    exit 1
fi

TitleCaseConverter() {
    echo "$1" | sed 's/./\L&/; s/^./\u&/'
}

RPIOS_TYPE="$(TitleCaseConverter "$RPIOS_TYPE")"

echo "Deploying $TOOLCHAIN Docs with Folder: $FOLDER_TYPE, RASPBERRY: $RPI_TYPE AND OS: $RPIOS_TYPE!"

# deploy docs
BASE_URL="sftp://frs.sourceforge.net/home/pfs/project/raspberry-pi-cross-compilers"

deploy_file() {
    local FOLDER="$1"
    local FILEPATH="$2"
    
    URL="$BASE_URL/$FOLDER/"
    URL=$(printf "%s\n" "$URL" | sed 's/ /%20/g')
    
    if [ -f "$FILEPATH" ]; then
        curl -k "$URL" -u "$USER_SFTP":"$PASSWORD_SFTP" -T "$FILEPATH" --ftp-create-dirs
    else
        echo "Error: File not found at $FILEPATH"
        exit 1
    fi
}

# deploy root folder docs
if [ "$FOLDER_TYPE" = "root" ]; then
    deploy_file "" "$HOME/root/README.md"
    exit 0
fi

if [ "$FOLDER_TYPE" = "base" ]; then
    case "$TOOLCHAIN" in
        "CLI")
            deploy_file "CLI Base" "$HOME/base/README.md"
            ;;
        "cross_64"|"native_64")
            deploy_file "Bonus Raspberry Pi GCC 64-Bit Toolchains" "$HOME/base/README.md"
            ;;
        "cross")
            deploy_file "Raspberry Pi GCC Cross-Compiler Toolchains" "$HOME/base/README.md"
            deploy_file "Bonus Raspberry Pi GCC 64-Bit Toolchains/Raspberry Pi GCC 64-Bit Cross-Compiler Toolchains" "$HOME/base64/README.md"
            ;;
        "native")
            deploy_file "Raspberry Pi GCC Native-Compiler Toolchains" "$HOME/base/README.md"
            deploy_file "Bonus Raspberry Pi GCC 64-Bit Toolchains/Raspberry Pi GCC 64-Bit Native-Compiler Toolchains" "$HOME/base64/README.md"
            ;;
        *)
            echo "Error: Invalid Raspberry Compiler Type!"
            exit 1
            ;;
    esac
    exit 0
fi

# deploy Toolchain specific folder docs
if [ "$FOLDER_TYPE" = "main" ]; then
    case "$TOOLCHAIN" in
        "cross")
            FOLDER="Raspberry Pi GCC Cross-Compiler Toolchains/$RPIOS_TYPE"
            ;;
        "native")
            FOLDER="Raspberry Pi GCC Native-Compiler Toolchains/$RPIOS_TYPE"
            ;;
        "cross_64")
            FOLDER="Bonus Raspberry Pi GCC 64-Bit Toolchains/Raspberry Pi GCC 64-Bit Cross-Compiler Toolchains/$RPIOS_TYPE"
            ;;
        "native_64")
            FOLDER="Bonus Raspberry Pi GCC 64-Bit Toolchains/Raspberry Pi GCC 64-Bit Native-Compiler Toolchains/$RPIOS_TYPE"
            ;;
        *)
            echo "Error: Invalid Main toolchain!"
            exit 1
            ;;
    esac
    deploy_file "$FOLDER" "$HOME/main/README.md"
    exit 0
fi

# deploy experimental docs
if [ "$FOLDER_TYPE" = "experimental" ]; then
    if [[ "$RPI_TYPE" =~ ^("x86"|"x86_64")$ ]]; then
        deploy_file "Exclusive-Experimental Toolchains/Desktop/$RPI_TYPE" "$HOME/experiment/README.md"
    elif [ -f "$HOME/main/README.md" ]; then
        deploy_file "Exclusive-Experimental Toolchains/Desktop" "$HOME/main/README.md"
    elif [ -f "$HOME/base/README.md" ]; then
        deploy_file "Exclusive-Experimental Toolchains" "$HOME/base/README.md"
    else
        echo "Warning: No Experimental docs found!"
        exit 1
    fi
fi