#!/bin/bash

# ===============================================
# Raspberry Pi Toolchains(raspberry-pi-cross-compilers): This project
# provides latest automated GCC Cross Compiler & Native (ARM & ARM64)
# build-scripts and precompiled standalone toolchains for Raspberry Pi.

# Copyright (C) 2020 Abhishek Thakur(@abhiTronix) <abhi.una12@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# ===============================================

# This script auto-deploys Toolchain specific README.md to Sourceforge secured server

helpfunction() {
    #helper function that prints custom usage help menu
    echo ""
    echo ""
    figlet -t -k -f /usr/share/figlet/standard.flf "Raspberry Pi Toolchains Docs Deployer"
    echo ""
    figlet -t -k -f /usr/share/figlet/term.flf "Copyright (c) 2020 abhiTronix"
    echo ""
    echo ""
    echo "Usage: $0 -t [Toolchain Type] -f [Folder type] -o [Target Pi OS type] -r [Raspberry Pi type] "
    echo -e "\t-t Toolchain Type?: (cross|native|cross_64|native_64|CLI)"
    echo -e "\t-f Upload Folder type?: (root|main|base|experimental)"
    echo -e "\t-o Raspberry Pi OS type?: (buster|bullseye|bookworm)"
    echo -e "\t-r What's yours Target Raspberry Pi type?: (0-1|2-3|3+|x86|x86_64)"
    echo ""
    echo ""
    exit 1 # Exit script after printing help
}

#input arguments handler
while getopts "t:f:o:r:" opt; do
    case "$opt" in
    t) TOOLCHAIN="$OPTARG" ;;
    f) FOLDER_TYPE="$OPTARG" ;;
    o) RPIOS_TYPE="$OPTARG" ;;
    r) RPI_TYPE="$OPTARG" ;;
    ?) helpfunction ;; #prints help function for invalid parameter
    esac
done

#validates parameters and print usage helper function in case parameters are missing
if [ -z "$TOOLCHAIN" ]; then
    TOOLCHAIN="others"
fi

if [ -z "$FOLDER_TYPE" ]; then
    echo "Error: Required parameters are missing!"
    helpfunction
fi

if ! [[ "$FOLDER_TYPE" =~ ^("root"|"main"|"base"|"experimental")$ ]]; then
    echo "Error: Wrong folder!"
    exit 1
fi

echo "Doing $TOOLCHAIN with Folder: $FOLDER_TYPE, RASPBERRY: $RPI_TYPE AND OS: $RPIOS_TYPE!"

# deploy root folder docs
BASE_URL="sftp://frs.sourceforge.net/home/pfs/project/raspberry-pi-cross-compilers"
FILEPATH=""

set_folder_and_filepath() {
    case "$FOLDER_TYPE" in
        "root")
            FOLDER=""
            FILEPATH="$HOME/root/README.md"
            ;;
        "base")
            case "$TOOLCHAIN" in
                "CLI") FOLDER="CLI Base" ;;
                "cross_64"|"native_64") FOLDER="Bonus Raspberry Pi GCC 64-Bit Toolchains" ;;
                "cross") FOLDER="Raspberry Pi GCC Cross-Compiler Toolchains" ;;
                "native") FOLDER="Raspberry Pi GCC Native-Compiler Toolchains" ;;
                *) echo "Error: Invalid Raspberry Compiler Type!"; exit 1 ;;
            esac
            FILEPATH="$HOME/base/README.md"
            ;;
        "main")
            case "$TOOLCHAIN" in
                "cross"|"native")
                    FOLDER="Raspberry Pi GCC ${TOOLCHAIN^}-Compiler Toolchains/${RPIOS_TYPE^}"
                    ;;
                "cross_64"|"native_64")
                    FOLDER="Bonus Raspberry Pi GCC 64-Bit Toolchains/Raspberry Pi GCC 64-Bit ${TOOLCHAIN%-64^}-Compiler Toolchains/${RPIOS_TYPE^}"
                    ;;
                *) echo "Error: Invalid Main toolchain!"; exit 1 ;;
            esac
            FILEPATH="$HOME/main/README.md"
            ;;
        "experimental")
            if [[ "$RPI_TYPE" =~ ^("x86"|"x86_64")$ ]]; then
                FOLDER="Exclusive-Experimental Toolchains/Desktop/$RPI_TYPE"
                FILEPATH="$HOME/experiment/README.md"
            elif [ -f "$HOME/main/README.md" ]; then
                FOLDER="Exclusive-Experimental Toolchains/Desktop"
                FILEPATH="$HOME/main/README.md"
            elif [ -f "$HOME/base/README.md" ]; then
                FOLDER="Exclusive-Experimental Toolchains"
                FILEPATH="$HOME/base/README.md"
            else
                echo "Warning: No Experimental docs found!"
                exit 1
            fi
            ;;
        *) echo "Error: Wrong folder!"; exit 1 ;;
    esac
}

set_folder_and_filepath

if [ ! -f "$FILEPATH" ]; then
    echo "Error: No valid docs found at $FILEPATH!"
    exit 1
fi

URL="$BASE_URL/$FOLDER/"
URL=$(printf "%s\n" "$URL" | sed 's/ /%20/g')

curl -k "$URL" -u "$USER_SFTP":"$PASSWORD_SFTP" -T "$FILEPATH" --ftp-create-dirs

exit 0